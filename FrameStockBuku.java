/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package perpustakaanfinalproject;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileSystemView;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;
import javax.persistence.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import static org.eclipse.persistence.sessions.remote.corba.sun.TransporterHelper.id;
import static perpustakaanfinalproject.DbUtils.getConnection;

/**
 *
 * @author LENOVO
 */
public class FrameStockBuku extends javax.swing.JFrame {

    Connection conn;
    Statement stmt;
    PreparedStatement pstmt;

    String driver = "org.postgresql.Driver";
    String koneksi = "jdbc:postgresql://localhost:5432/Perpustakaan";
    String user = "postgres";
    String password = "12345678";

    public FrameStockBuku() {
        initComponents();
        tampil();
        clearFields();
    }

    private void tampil() {
        String sql = "SELECT b.ID_BUKU, b.JUDUL_BUKU, b.PENERBIT_BUKU, b.PENGARANG_BUKU, "
                + "b.TAHUN_TERBIT, b.JUMLAH_HALAMAN, b.STOK, k.NAMA_KATEGORI "
                + "FROM BUKU b "
                + "LEFT JOIN KATEGORI k ON b.ID_KATEGORI = k.ID_KATEGORI";
        try (Connection conn = DriverManager.getConnection(koneksi, user, password); Statement stmt = conn.createStatement(); ResultSet rs = stmt.executeQuery(sql)) {

            // Menampilkan hasil query ke JTable
            tblBuku.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (SQLException ex) {
            Logger.getLogger(FramePetugas.class.getName()).log(Level.SEVERE, "Kesalahan SQL: " + ex.getMessage(), ex);
        }
    }

    private void clearFields() {
        tfPengarang.setText("");
        tfTahun.setText("");
        tfPenerbit.setText("");
        tfStock.setText("");
        tfHalaman.setText("");
        tfJudul.setText("");
        tfKategori.setText("");
        tfId.setText("");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        btnInsert = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tfPenerbit = new javax.swing.JTextField();
        tfPengarang = new javax.swing.JTextField();
        tfTahun = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBuku = new javax.swing.JTable();
        tfHalaman = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        tfStock = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        tfJudul = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        tfId = new javax.swing.JTextField();
        tfKategori = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 204, 204));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jPanel1.setBackground(new java.awt.Color(255, 204, 204));

        jLabel2.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        jLabel2.setText("Judul Buku");

        btnInsert.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        btnInsert.setText("Insert");
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        jLabel3.setText("Pengarang");

        btnUpdate.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        jLabel4.setText("Jumlah Halaman");

        btnDelete.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        jLabel5.setText("Penerbit");

        jLabel6.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        jLabel6.setText("Tahun Terbit");

        jLabel1.setFont(new java.awt.Font("Serif", 0, 18)); // NOI18N
        jLabel1.setText("DATA BUKU");

        tblBuku.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 153, 153)));
        tblBuku.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        tblBuku.setForeground(new java.awt.Color(255, 102, 102));
        tblBuku.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Judul Buku", "Pengarang", "Jumlah Halaman", "Penerbit", "Tahun Terbit", "Stock", "Id Kategori"
            }
        ));
        tblBuku.setSelectionBackground(new java.awt.Color(204, 204, 255));
        tblBuku.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblBukuMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblBuku);

        jLabel7.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        jLabel7.setText("Stock ");

        jLabel8.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        jLabel8.setText("Id Kategori");

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        jLabel9.setText("ID Buku");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(292, 292, 292))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 677, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel9))
                        .addGap(42, 42, 42)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(tfPengarang, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfPenerbit, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfId, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfJudul, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(tfHalaman, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(tfTahun, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tfStock, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tfKategori, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnUpdate)
                            .addComponent(btnInsert))))
                .addGap(0, 78, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(tfId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(tfTahun, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnInsert))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(tfHalaman, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnUpdate)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(tfJudul, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfPenerbit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(tfStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfPengarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jButton1)
                    .addComponent(tfKategori, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(46, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
        try (Connection conn = getConnection()) {
            // Mengambil input dari field
            String idBuku = tfId.getText();         // ID_Buku dari field tfId
            String idKategori = tfKategori.getText(); // ID_Kategori dari field tfKategori
            String judulBuku = tfJudul.getText();    // Judul Buku dari field tfJudul
            String penerbitBuku = tfPenerbit.getText(); // Penerbit Buku dari field tfPenerbit
            String pengarangBuku = tfPengarang.getText(); // Pengarang Buku dari field tfPengarang
            String tahunTerbit = tfTahun.getText();   // Tahun Terbit dari field tfTahun
            int jumlahHalaman = Integer.parseInt(tfHalaman.getText()); // Jumlah Halaman sebagai INT
            int stok = Integer.parseInt(tfStock.getText());         // Stok Buku sebagai INT

            // Validasi input
            if (idBuku.isEmpty() || idKategori.isEmpty() || judulBuku.isEmpty() || penerbitBuku.isEmpty()
                    || pengarangBuku.isEmpty() || tahunTerbit.isEmpty() || tfHalaman.getText().isEmpty() || tfStock.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Semua kolom harus diisi!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Query untuk memasukkan data
            String sql = "INSERT INTO BUKU (ID_BUKU, ID_KATEGORI, JUDUL_BUKU, PENERBIT_BUKU, PENGARANG_BUKU, TAHUN_TERBIT, JUMLAH_HALAMAN, STOK) "
                    + "VALUES (?, ?, ?, ?, ?, ?, ?, ?)";

            // Menyiapkan prepared statement untuk eksekusi query
            try (PreparedStatement pstmt = conn.prepareStatement(sql)) {
                pstmt.setString(1, idBuku);         // Set ID_Buku
                pstmt.setString(2, idKategori);     // Set ID_Kategori
                pstmt.setString(3, judulBuku);      // Set Judul Buku
                pstmt.setString(4, penerbitBuku);   // Set Penerbit Buku
                pstmt.setString(5, pengarangBuku);  // Set Pengarang Buku
                pstmt.setString(6, tahunTerbit);    // Set Tahun Terbit
                pstmt.setInt(7, jumlahHalaman);     // Set Jumlah Halaman (INT)
                pstmt.setInt(8, stok);              // Set Stok Buku (INT)

                // Eksekusi query untuk memasukkan data
                int rowsAffected = pstmt.executeUpdate();
                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(this, "Data berhasil disimpan!", "Sukses", JOptionPane.INFORMATION_MESSAGE);
                    clearFields(); // Bersihkan kolom input setelah berhasil menyimpan
                    tampil();      // Muat ulang data tabel
                } else {
                    JOptionPane.showMessageDialog(this, "Gagal menyimpan data.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat menyimpan data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Koneksi gagal: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnInsertActionPerformed


    private void tblBukuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBukuMouseClicked
        // Ambil baris yang dipilih
        int row = tblBuku.getSelectedRow();

        if (row >= 0) {
            // Ambil data dari tabel berdasarkan kolom yang sesuai
            String idBuku = tblBuku.getValueAt(row, 0).toString();          // ID buku ada di kolom pertama
            String judul = tblBuku.getValueAt(row, 1).toString();            // Judul ada di kolom kedua
            String penerbit = tblBuku.getValueAt(row, 2).toString();         // Penerbit ada di kolom ketiga
            String pengarang = tblBuku.getValueAt(row, 3).toString();        // Pengarang ada di kolom keempat
            int tahunTerbit = Integer.parseInt(tblBuku.getValueAt(row, 4).toString());  // Tahun Terbit ada di kolom kelima
            int jumlahHalaman = Integer.parseInt(tblBuku.getValueAt(row, 5).toString()); // Jumlah Halaman ada di kolom keenam
            String stok = tblBuku.getValueAt(row, 6).toString();             // Stok ada di kolom ketujuh (asumsikan stok di kolom ini)
            String idKategori = tblBuku.getValueAt(row, 7).toString();       // Ambil ID Kategori dari kolom ke-8 (ID kategori)

            // Set data ke JTextField atau Label
            tfId.setText(idBuku);      // Set ID buku
            tfJudul.setText(judul);    // Set Judul buku
            tfPenerbit.setText(penerbit);  // Set Penerbit buku
            tfPengarang.setText(pengarang); // Set Pengarang buku
            tfTahun.setText(String.valueOf(tahunTerbit)); // Set Tahun Terbit
            tfHalaman.setText(String.valueOf(jumlahHalaman)); // Set Jumlah Halaman
            tfStock.setText(stok); // Set Stok Buku

            // Set ID Kategori ke JTextField tfKategori
            tfKategori.setText(idKategori); // Set ID kategori ke tfKategori
        }
    }//GEN-LAST:event_tblBukuMouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        try (Connection conn = getConnection()) {
            String idBuku = tfId.getText();         // ID_Buku dari field tfId
            String idKategori = tfKategori.getText(); // ID_Kategori dari field tfKategori
            String judulBuku = tfJudul.getText();    // Judul Buku dari field tfJudul
            String penerbitBuku = tfPenerbit.getText(); // Penerbit Buku dari field tfPenerbit
            String pengarangBuku = tfPengarang.getText(); // Pengarang Buku dari field tfPengarang
            String tahunTerbit = tfTahun.getText();   // Tahun Terbit dari field tfTahun
            int jumlahHalaman = Integer.parseInt(tfHalaman.getText()); // Jumlah Halaman sebagai INT
            int stok = Integer.parseInt(tfStock.getText());         // Stok Buku sebagai INT

            // Validasi input
            if (idBuku.isEmpty() || idKategori.isEmpty() || judulBuku.isEmpty() || penerbitBuku.isEmpty()
                    || pengarangBuku.isEmpty() || tahunTerbit.isEmpty() || tfHalaman.getText().isEmpty() || tfStock.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Semua kolom harus diisi!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            String sql = "UPDATE BUKU SET ID_KATEGORI = ?, JUDUL_BUKU = ?, PENERBIT_BUKU = ?, PENGARANG_BUKU = ?, TAHUN_TERBIT = ?, "
                    + "JUMLAH_HALAMAN = ?, STOK = ? WHERE ID_BUKU = ?";

            try (PreparedStatement pstmt = conn.prepareStatement(sql)) {
                pstmt.setString(1, idKategori);     // Set ID_Kategori
                pstmt.setString(2, judulBuku);      // Set Judul Buku
                pstmt.setString(3, penerbitBuku);   // Set Penerbit Buku
                pstmt.setString(4, pengarangBuku);  // Set Pengarang Buku
                pstmt.setString(5, tahunTerbit);    // Set Tahun Terbit
                pstmt.setInt(6, jumlahHalaman);     // Set Jumlah Halaman (INT)
                pstmt.setInt(7, stok);              // Set Stok Buku (INT)
                pstmt.setString(8, idBuku);         // Set ID_Buku sebagai kondisi WHERE

                // Eksekusi query untuk memperbarui data
                int rowsAffected = pstmt.executeUpdate();
                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(this, "Data berhasil diperbarui!", "Sukses", JOptionPane.INFORMATION_MESSAGE);
                    clearFields(); // Bersihkan kolom input setelah berhasil memperbarui
                    tampil();      // Muat ulang data tabel
                } else {
                    JOptionPane.showMessageDialog(this, "Gagal memperbarui data.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat memperbarui data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Koneksi gagal: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
        FrameBeranda beranda = new FrameBeranda();
        beranda.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int selectedRow = tblBuku.getSelectedRow(); // Ambil baris yang dipilih di tabel
        if (selectedRow >= 0) {
            String idBuku = tblBuku.getValueAt(selectedRow, 0).toString(); // Ambil ID_Buku dari tabel

            // Konfirmasi sebelum menghapus data
            int confirmation = JOptionPane.showConfirmDialog(this,
                    "Apakah Anda yakin ingin menghapus data ini?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
            if (confirmation == JOptionPane.YES_OPTION) {
                // Query untuk menghapus data
                String sql = "DELETE FROM BUKU WHERE ID_BUKU = ?";

                try (Connection conn = getConnection(); // Koneksi ke database
                         PreparedStatement pstmt = conn.prepareStatement(sql)) {

                    pstmt.setString(1, idBuku); // Set nilai ID_Buku di query

                    // Eksekusi query
                    int rowsAffected = pstmt.executeUpdate();
                    if (rowsAffected > 0) {
                        JOptionPane.showMessageDialog(this, "Data berhasil dihapus!", "Sukses", JOptionPane.INFORMATION_MESSAGE);
                        clearFields(); // Bersihkan kolom input setelah operasi
                        tampil();      // Perbarui tampilan tabel
                    } else {
                        JOptionPane.showMessageDialog(this, "Data gagal dihapus.", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat menghapus data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Silakan pilih data yang ingin dihapus dari tabel.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameStockBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameStockBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameStockBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameStockBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameStockBuku().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblBuku;
    private javax.swing.JTextField tfHalaman;
    private javax.swing.JTextField tfId;
    private javax.swing.JTextField tfJudul;
    private javax.swing.JTextField tfKategori;
    private javax.swing.JTextField tfPenerbit;
    private javax.swing.JTextField tfPengarang;
    private javax.swing.JTextField tfStock;
    private javax.swing.JTextField tfTahun;
    // End of variables declaration//GEN-END:variables

}
